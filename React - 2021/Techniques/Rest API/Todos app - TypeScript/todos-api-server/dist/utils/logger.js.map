{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/utils/logger.ts"],"names":[],"mappings":";;AAEA,qCAA2D;AAE3D,MAAM,EACJ,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,GACpD,GAAG,gBAAM,CAAC;AAEX,MAAM,uBAAuB,GAAG,IAAI,oBAAU,CAAC,OAAO,CAAC;IACrD,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,OAAO,CACb,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,EAC3B,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EACvB,QAAQ,EAAE,EACV,SAAS,CAAC;QACR,MAAM,EAAE,UAAU;KACnB,CAAC,EACF,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACf,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CACpJ,CAAC,CACH;CACF,CAAC,CAAC;AAEH,MAAM,qBAAqB,GAAG,IAAI,oBAAU,CAAC,OAAO,CAAC;IACnD,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,OAAO,CACb,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EACzB,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EACvB,QAAQ,EAAE,EACV,SAAS,CAAC;QACR,MAAM,EAAE,UAAU;KACnB,CAAC,EACF,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACf,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CACpJ,CAAC,CACH;CACF,CAAC,CAAC;AAEH,MAAM,MAAM,GAAG;IACb,OAAO,EAAE,sBAAY,CAAC;QACpB,UAAU,EAAE;YACV,uBAAuB;SACxB;QACD,WAAW,EAAE,KAAK;KACnB,CAAC;IACF,KAAK,EAAE,sBAAY,CAAC;QAClB,UAAU,EAAE;YACV,qBAAqB;SACtB;QACD,WAAW,EAAE,KAAK;KACnB,CAAC;CACH,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["/* eslint-disable max-len */\n\nimport { createLogger, transports, format } from 'winston';\n\nconst {\n  combine, colorize, label, errors, printf, timestamp,\n} = format;\n\nconst expressConsoleTransport = new transports.Console({\n  level: 'info',\n  format: combine(\n    label({ label: 'Express' }),\n    errors({ stack: true }),\n    colorize(),\n    timestamp({\n      format: 'HH:mm:ss',\n    }),\n    printf((info) => (\n      `${String(info.timestamp)} [ ${String(info.label)} ] ${info.level}: ${info.message} ${typeof info.stack !== 'undefined' ? String(info.stack) : ''}`\n    )),\n  ),\n});\n\nconst mongoConsoleTransport = new transports.Console({\n  level: 'info',\n  format: combine(\n    label({ label: 'Mongo' }),\n    errors({ stack: true }),\n    colorize(),\n    timestamp({\n      format: 'HH:mm:ss',\n    }),\n    printf((info) => (\n      `${String(info.timestamp)} [ ${String(info.label)} ] ${info.level}: ${info.message} ${typeof info.stack !== 'undefined' ? String(info.stack) : ''}`\n    )),\n  ),\n});\n\nconst logger = {\n  express: createLogger({\n    transports: [\n      expressConsoleTransport,\n    ],\n    exitOnError: false,\n  }),\n  mongo: createLogger({\n    transports: [\n      mongoConsoleTransport,\n    ],\n    exitOnError: false,\n  }),\n};\n\nexport default logger;\n"]}