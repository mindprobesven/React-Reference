{"version":3,"file":"error.js","sourceRoot":"","sources":["../../../src/express/responseHandlers/error.ts"],"names":[],"mappings":";;;;;AAIA,gEAAwC;AAQxC,MAAM,aAAa,GAAkB,CACnC,GAAoB,EACpB,GAAqB,EACrB,MAAc,EACd,OAAgB,EAChB,KAAc,EACR,EAAE;IACR,IAAI,KAAK,YAAY,KAAK,EAAE;QAC1B,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACjB,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,KAAK,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,OAAO,MAAM,GAAG,CAAC,WAAW,MAAM,GAAG,CAAC,EAAE,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE;SAC9I,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KAC7D;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QACvD,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACjB,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,KAAK,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,GAAG,CAAC,WAAW,MAAM,GAAG,CAAC,EAAE,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE;SACxH,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KACpC;IAED,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QACjD,gBAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACjB,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,KAAK,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,GAAG,CAAC,WAAW,MAAM,GAAG,CAAC,EAAE,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE;SACxH,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAClC;AACH,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["/* eslint-disable max-len */\n\nimport express from 'express';\n\nimport logger from '../../utils/logger';\n\ninterface ResponseError {\n  (req: express.Request, res: express.Response, status: number, message: string, error: Array<Record<string, unknown>>): void;\n  (req: express.Request, res: express.Response, status: number, message: null, error: Error): void;\n  (req: express.Request, res: express.Response, status: number, message: string, error: null): void;\n}\n\nconst responseError: ResponseError = (\n  req: express.Request,\n  res: express.Response,\n  status: number,\n  message: unknown,\n  error: unknown,\n): void => {\n  if (error instanceof Error) {\n    logger.express.log({\n      level: 'error',\n      message: `[ ${req.method} ] ${status} - ${error.name} - ${error.message} - ${req.originalUrl} - ${req.ip} - ${String(req.get('user-agent'))}`,\n    });\n\n    res.status(status).send(`${error.name} - ${error.message}`);\n  }\n\n  if (Array.isArray(error) && typeof message === 'string') {\n    logger.express.log({\n      level: 'error',\n      message: `[ ${req.method} ] ${status} - ${message} - ${req.originalUrl} - ${req.ip} - ${String(req.get('user-agent'))}`,\n    });\n\n    res.status(status).json({ error });\n  }\n\n  if (error === null && typeof message === 'string') {\n    logger.express.log({\n      level: 'error',\n      message: `[ ${req.method} ] ${status} - ${message} - ${req.originalUrl} - ${req.ip} - ${String(req.get('user-agent'))}`,\n    });\n\n    res.status(status).send(message);\n  }\n};\n\nexport default responseError;\n"]}