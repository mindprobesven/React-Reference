{"version":3,"file":"adminController.js","sourceRoot":"","sources":["../../../src/express/controllers/adminController.ts"],"names":[],"mappings":";;;;;AAEA,sDAA8B;AAE9B,8FAAsE;AACtE,0FAAkE;AAClE,4FAAoE;AAEpE,qEAA6D;AAE7D,0EAA0D;AAE1D,oEAAiD;AAEjD,MAAM,eAAe;IAKnB;QAuCQ,aAAQ,GAAG,KAAK,EAAE,GAAoB,EAAE,GAAqB,EAAiB,EAAE;YACtF,IAAI;gBACF,MAAM,OAAO,GAAG,IAAI,cAAS,EAAE,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;gBAEvC,OAAO,CAAC,GAAG,CAAC,MAAM,cAAS,CAAC,SAAS,EAAE,CAAC,CAAC;aAgB1C;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;YAED,iBAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACzF,CAAC,CAAC;QAEM,YAAO,GAAG,CAAC,GAAoB,EAAE,GAAqB,EAAQ,EAAE;YACtE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtB,iBAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC,CAAC;QArEA,IAAI,CAAC,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IAEO,SAAS;QAWf,IAAI,CAAC,MAAM,CAAC,GAAG,CACb,QAAQ,EACR,CAAC,8BAAoB,EAAE,4BAAkB,CAAC,EAC1C,IAAI,CAAC,QAAQ,CACd,CAAC;QAaF,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,WAAW,EACX,CAAC,8BAAoB,EAAE,6BAAmB,CAAC,cAAoB,CAAC,CAAC,EACjE,IAAI,CAAC,OAAO,CACb,CAAC;IACJ,CAAC;IAmCD,MAAM,CAAC,MAAM;QACX,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;IAChC,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","sourcesContent":["/* eslint-disable max-len */\n\nimport express from 'express';\n\nimport checkMongoConnection from '../middleware/checkMongoConnection';\nimport validateGetRequest from '../middleware/validateGetRequest';\nimport validatePostRequest from '../middleware/validatePostRequest';\n\nimport userValidationSchema from '../validationSchemas/user';\n\nimport responseSuccess from '../responseHandlers/success';\n\nimport UserModel from '../../mongo/schemas/user';\n\nclass AdminController {\n  private static controller: AdminController;\n\n  private router: express.Router;\n\n  private constructor() {\n    this.router = express.Router();\n  }\n\n  private configure(): void {\n    /*\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users/?sortBy=firstName&sortOrder=asc\n    curl -X GET -H \"Accept: application1/json\" http://127.0.0.1:5000/admin/users/?sortBy=firstName&sortOrder=asc\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users/?sortBy=createdAt&sortOrder=desc\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users/?searchFor=firstName&searchTerm=s\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users/?searchFor=lastName&searchTerm=k\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users/?searchFor=firstName&searchTerm=s&sortBy=firstName&sortOrder=asc\n    curl -X GET -H \"Accept: application/json\" http://127.0.0.1:5000/admin/users\n    curl -X GET -H \"Accept: application/json1\" http://127.0.0.1:5000/admin/users\n    */\n    this.router.get(\n      '/users',\n      [checkMongoConnection, validateGetRequest],\n      this.getUsers,\n    );\n\n    /*\n    curl -X POST --data '{\"firstName\":\"Sven\", \"lastName\":\"Kohn\", \"email\":\"sven@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json1\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Sven\", \"lastName\":\"Kohn\", \"email\":\"sven@mindprobe\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Sven11 Michel-Ã±\", \"lastName\":\"Kohn\", \"email\":\"sven@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n\n    curl -X POST --data '{\"firstName\":\"Sven\", \"lastName\":\"Kohn\", \"email\":\"sven@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Simon\", \"lastName\":\"Weisberger\", \"email\":\"simon@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Barbara\", \"lastName\":\"Massari Nola\", \"email\":\"barbara@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Valentina\", \"lastName\":\"Kohn\", \"email\":\"valentina@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    curl -X POST --data '{\"firstName\":\"Thomas\", \"lastName\":\"Kohn\", \"email\":\"thomas@mindprobe.io\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://127.0.0.1:5000/admin/user/add\n    */\n    this.router.post(\n      '/user/add',\n      [checkMongoConnection, validatePostRequest(userValidationSchema)],\n      this.addUser,\n    );\n  }\n\n  private getUsers = async (req: express.Request, res: express.Response): Promise<void> => {\n    try {\n      const userDoc = new UserModel();\n      console.log(await userDoc.getUsers1());\n\n      console.log(await UserModel.getUsers2());\n\n      /* const result = await UserModel.find({})\n        .select({\n          updatedAt: 0,\n          __v: 0,\n        })\n        .lean();\n\n      console.log(result); */\n\n      // const Model1 = model('User');\n      // const user1 = new Model1();\n\n      // const userModel: Model<unknown, {}, {}> = new UserModel();\n      // const users = await userModel.getUsers(req.query);\n    } catch (error) {\n      console.log(error);\n    }\n\n    responseSuccess(req, res, 200, 'Sending user data', [{ first: 'Sven', last: 'Kohn' }]);\n  };\n\n  private addUser = (req: express.Request, res: express.Response): void => {\n    console.log(req.body);\n    responseSuccess(req, res, 200, 'OK');\n  };\n\n  static create(): express.Router {\n    if (typeof this.controller === 'undefined') {\n      this.controller = new AdminController();\n      this.controller.configure();\n    }\n    return this.controller.router;\n  }\n}\n\nexport default AdminController;\n"]}