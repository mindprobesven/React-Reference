{"version":3,"file":"userQuery.js","sourceRoot":"","sources":["../../../src/express/validationSchemas/userQuery.ts"],"names":[],"mappings":";;;;;AAAA,0DAAkC;AAClC,yDAAgD;AAEhD,MAAM,eAAe,GAAG,+BAAW,CAAC;IAClC,SAAS,EAAE;QACT,EAAE,EAAE,CAAC,OAAO,CAAC;QACb,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE;YACR,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACpB,YAAY,EAAE,UAAU;YACxB,IAAI,EAAE,IAAI;SACX;QACD,MAAM,EAAE;YACN,OAAO,EAAE,CAAC,KAAa,EAAE,EAAE;gBAEzB,IAAI,mBAAS,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE;oBAC7D,OAAO,IAAI,CAAC;iBACb;gBACD,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACxC,CAAC;SACF;KACF;CACF,CAAC,CAAC;AAEH,kBAAe,eAAe,CAAC","sourcesContent":["import validator from 'validator';\nimport { checkSchema } from 'express-validator';\n\nconst userQuerySchema = checkSchema({\n  searchFor: {\n    in: ['query'],\n    optional: true,\n    isLength: {\n      options: { max: 25 },\n      errorMessage: 'Too long',\n      bail: true,\n    },\n    custom: {\n      options: (value: string) => {\n        // if (validator.isAlphanumeric(value, 'en-US')) {\n        if (validator.isAlphanumeric(value, 'en-US', { ignore: '-' })) {\n          return true;\n        }\n        throw new Error('Invalid characters');\n      },\n    },\n  },\n});\n\nexport default userQuerySchema;\n"]}