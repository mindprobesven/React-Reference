{"version":3,"file":"user.js","sourceRoot":"","sources":["../../../src/mongo/schemas/user.ts"],"names":[],"mappings":";;AAAA,uCAAgD;AAehD,MAAM,UAAU,GAAG,IAAI,iBAAM,CAA2B;IACtD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,SAAS,EAAE;QACT,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,KAAK;KACf;CAMF,EAAE;IACD,UAAU,EAAE,IAAI;CACjB,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,SAAS;IAC/C,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAE1C,OAAO,gBAAK,CAAC,MAAM,CAAC;SACjB,IAAI,CAAC,EAAE,CAAC;SACR,MAAM,CAAC;QACN,SAAS,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC;KACP,CAAC;SACD,IAAI,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,SAAS;IAC/C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAEjC,OAAO,IAAI;SACR,IAAI,CAAC,EAAE,CAAC;SACR,MAAM,CAAC;QACN,SAAS,EAAE,CAAC;QACZ,GAAG,EAAE,CAAC;KACP,CAAC;SACD,IAAI,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,gBAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAE5C,kBAAe,SAAS,CAAC","sourcesContent":["import { Schema, model, Model } from 'mongoose';\n\ninterface IUser {\n  firstName: string;\n  lastName: string;\n  email: string;\n  validated: boolean;\n  // posts: (Schema.Types.ObjectId)[];\n  getUsers1: () => Promise<void>;\n}\n\ninterface IUserModel extends Model<IUser> {\n  getUsers2: () => Promise<void>;\n}\n\nconst userSchema = new Schema<IUser, IUserModel, IUser>({\n  firstName: {\n    type: String,\n    required: true,\n  },\n  lastName: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  validated: {\n    type: Boolean,\n    required: true,\n    default: false,\n  },\n  /* posts: {\n    type: [Schema.Types.ObjectId],\n    required: true,\n    default: [],\n  }, */\n}, {\n  timestamps: true,\n});\n\nuserSchema.methods.getUsers1 = function getUsers1() {\n  console.log('getUsers - Instance Method');\n\n  return model('User')\n    .find({})\n    .select({\n      updatedAt: 0,\n      __v: 0,\n    })\n    .lean();\n};\n\nuserSchema.statics.getUsers2 = function getUsers2() {\n  console.log('getUsers - Static');\n\n  return this\n    .find({})\n    .select({\n      updatedAt: 0,\n      __v: 0,\n    })\n    .lean();\n};\n\nconst UserModel = model('User', userSchema);\n\nexport default UserModel;\n"]}